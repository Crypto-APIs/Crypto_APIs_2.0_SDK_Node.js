/**
 * CryptoAPIs
 * Crypto APIs is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2021-03-20
 * Contact: developers@cryptoapis.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Cryptoapis);
  }
}(this, function(expect, Cryptoapis) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Cryptoapis.HDWalletsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('HDWalletsApi', function() {
    describe('deriveAndSyncNewChangeAddresses', function() {
      it('should call deriveAndSyncNewChangeAddresses successfully', function(done) {
        //uncomment below and update the code to test deriveAndSyncNewChangeAddresses
        //instance.deriveAndSyncNewChangeAddresses(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deriveAndSyncNewReceivingAddresses', function() {
      it('should call deriveAndSyncNewReceivingAddresses successfully', function(done) {
        //uncomment below and update the code to test deriveAndSyncNewReceivingAddresses
        //instance.deriveAndSyncNewReceivingAddresses(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getHDWalletXPubYPubZPubAssets', function() {
      it('should call getHDWalletXPubYPubZPubAssets successfully', function(done) {
        //uncomment below and update the code to test getHDWalletXPubYPubZPubAssets
        //instance.getHDWalletXPubYPubZPubAssets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getHDWalletXPubYPubZPubDetails', function() {
      it('should call getHDWalletXPubYPubZPubDetails successfully', function(done) {
        //uncomment below and update the code to test getHDWalletXPubYPubZPubDetails
        //instance.getHDWalletXPubYPubZPubDetails(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listHDWalletXPubYPubZPubTransactions', function() {
      it('should call listHDWalletXPubYPubZPubTransactions successfully', function(done) {
        //uncomment below and update the code to test listHDWalletXPubYPubZPubTransactions
        //instance.listHDWalletXPubYPubZPubTransactions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listHDWalletXPubYPubZPubUTXOs', function() {
      it('should call listHDWalletXPubYPubZPubUTXOs successfully', function(done) {
        //uncomment below and update the code to test listHDWalletXPubYPubZPubUTXOs
        //instance.listHDWalletXPubYPubZPubUTXOs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSyncedAddresses', function() {
      it('should call listSyncedAddresses successfully', function(done) {
        //uncomment below and update the code to test listSyncedAddresses
        //instance.listSyncedAddresses(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('syncHDWalletXPubYPubZPub', function() {
      it('should call syncHDWalletXPubYPubZPub successfully', function(done) {
        //uncomment below and update the code to test syncHDWalletXPubYPubZPub
        //instance.syncHDWalletXPubYPubZPub(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('syncNewHDWalletXPubYPubZPub', function() {
      it('should call syncNewHDWalletXPubYPubZPub successfully', function(done) {
        //uncomment below and update the code to test syncNewHDWalletXPubYPubZPub
        //instance.syncNewHDWalletXPubYPubZPub(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
