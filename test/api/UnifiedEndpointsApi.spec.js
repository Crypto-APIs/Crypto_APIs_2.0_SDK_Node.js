/**
 * CryptoAPIs
 * Crypto APIs is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2021-03-20
 * Contact: developers@cryptoapis.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Cryptoapis);
  }
}(this, function(expect, Cryptoapis) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Cryptoapis.UnifiedEndpointsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UnifiedEndpointsApi', function() {
    describe('estimateTransactionSmartFee', function() {
      it('should call estimateTransactionSmartFee successfully', function(done) {
        //uncomment below and update the code to test estimateTransactionSmartFee
        //instance.estimateTransactionSmartFee(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAddressBalance', function() {
      it('should call getAddressBalance successfully', function(done) {
        //uncomment below and update the code to test getAddressBalance
        //instance.getAddressBalance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAddressDetails', function() {
      it('should call getAddressDetails successfully', function(done) {
        //uncomment below and update the code to test getAddressDetails
        //instance.getAddressDetails(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBlockDetailsByBlockHash', function() {
      it('should call getBlockDetailsByBlockHash successfully', function(done) {
        //uncomment below and update the code to test getBlockDetailsByBlockHash
        //instance.getBlockDetailsByBlockHash(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBlockDetailsByBlockHeight', function() {
      it('should call getBlockDetailsByBlockHeight successfully', function(done) {
        //uncomment below and update the code to test getBlockDetailsByBlockHeight
        //instance.getBlockDetailsByBlockHeight(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFeeRecommendations', function() {
      it('should call getFeeRecommendations successfully', function(done) {
        //uncomment below and update the code to test getFeeRecommendations
        //instance.getFeeRecommendations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLastMinedBlock', function() {
      it('should call getLastMinedBlock successfully', function(done) {
        //uncomment below and update the code to test getLastMinedBlock
        //instance.getLastMinedBlock(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNextAvailableNonce', function() {
      it('should call getNextAvailableNonce successfully', function(done) {
        //uncomment below and update the code to test getNextAvailableNonce
        //instance.getNextAvailableNonce(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRawTransactionData', function() {
      it('should call getRawTransactionData successfully', function(done) {
        //uncomment below and update the code to test getRawTransactionData
        //instance.getRawTransactionData(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTransactionDetailsByTransactionID', function() {
      it('should call getTransactionDetailsByTransactionID successfully', function(done) {
        //uncomment below and update the code to test getTransactionDetailsByTransactionID
        //instance.getTransactionDetailsByTransactionID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listConfirmedTokensTransfersByAddressAndTimeRange', function() {
      it('should call listConfirmedTokensTransfersByAddressAndTimeRange successfully', function(done) {
        //uncomment below and update the code to test listConfirmedTokensTransfersByAddressAndTimeRange
        //instance.listConfirmedTokensTransfersByAddressAndTimeRange(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listConfirmedTransactionsByAddress', function() {
      it('should call listConfirmedTransactionsByAddress successfully', function(done) {
        //uncomment below and update the code to test listConfirmedTransactionsByAddress
        //instance.listConfirmedTransactionsByAddress(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listConfirmedTransactionsByAddressAndTimeRange', function() {
      it('should call listConfirmedTransactionsByAddressAndTimeRange successfully', function(done) {
        //uncomment below and update the code to test listConfirmedTransactionsByAddressAndTimeRange
        //instance.listConfirmedTransactionsByAddressAndTimeRange(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listInternalTransactionsByAddressAndTimeRange', function() {
      it('should call listInternalTransactionsByAddressAndTimeRange successfully', function(done) {
        //uncomment below and update the code to test listInternalTransactionsByAddressAndTimeRange
        //instance.listInternalTransactionsByAddressAndTimeRange(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listLatestMinedBlocks', function() {
      it('should call listLatestMinedBlocks successfully', function(done) {
        //uncomment below and update the code to test listLatestMinedBlocks
        //instance.listLatestMinedBlocks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTransactionsByBlockHash', function() {
      it('should call listTransactionsByBlockHash successfully', function(done) {
        //uncomment below and update the code to test listTransactionsByBlockHash
        //instance.listTransactionsByBlockHash(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTransactionsByBlockHeight', function() {
      it('should call listTransactionsByBlockHeight successfully', function(done) {
        //uncomment below and update the code to test listTransactionsByBlockHeight
        //instance.listTransactionsByBlockHeight(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listUnconfirmedTransactionsByAddress', function() {
      it('should call listUnconfirmedTransactionsByAddress successfully', function(done) {
        //uncomment below and update the code to test listUnconfirmedTransactionsByAddress
        //instance.listUnconfirmedTransactionsByAddress(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listUnspentTransactionOutputsByAddress', function() {
      it('should call listUnspentTransactionOutputsByAddress successfully', function(done) {
        //uncomment below and update the code to test listUnspentTransactionOutputsByAddress
        //instance.listUnspentTransactionOutputsByAddress(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
