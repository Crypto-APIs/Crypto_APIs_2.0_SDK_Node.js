/**
 * CryptoAPIs
 * Crypto APIs is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2021-03-20
 * Contact: developers@cryptoapis.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Cryptoapis);
  }
}(this, function(expect, Cryptoapis) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Cryptoapis.PrepareATransactionFromAnAddressInHDWalletXPubYPubZPubRIBST();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PrepareATransactionFromAnAddressInHDWalletXPubYPubZPubRIBST', function() {
    it('should create an instance of PrepareATransactionFromAnAddressInHDWalletXPubYPubZPubRIBST', function() {
      // uncomment below and update the code to test PrepareATransactionFromAnAddressInHDWalletXPubYPubZPubRIBST
      //var instance = new Cryptoapis.PrepareATransactionFromAnAddressInHDWalletXPubYPubZPubRIBST();
      //expect(instance).to.be.a(Cryptoapis.PrepareATransactionFromAnAddressInHDWalletXPubYPubZPubRIBST);
    });

    it('should have the property data (base name: "data")', function() {
      // uncomment below and update the code to test the property data
      //var instance = new Cryptoapis.PrepareATransactionFromAnAddressInHDWalletXPubYPubZPubRIBST();
      //expect(instance).to.be();
    });

    it('should have the property derivationIndex (base name: "derivationIndex")', function() {
      // uncomment below and update the code to test the property derivationIndex
      //var instance = new Cryptoapis.PrepareATransactionFromAnAddressInHDWalletXPubYPubZPubRIBST();
      //expect(instance).to.be();
    });

    it('should have the property expiration (base name: "expiration")', function() {
      // uncomment below and update the code to test the property expiration
      //var instance = new Cryptoapis.PrepareATransactionFromAnAddressInHDWalletXPubYPubZPubRIBST();
      //expect(instance).to.be();
    });

    it('should have the property rawData (base name: "rawData")', function() {
      // uncomment below and update the code to test the property rawData
      //var instance = new Cryptoapis.PrepareATransactionFromAnAddressInHDWalletXPubYPubZPubRIBST();
      //expect(instance).to.be();
    });

    it('should have the property rawDataHex (base name: "rawDataHex")', function() {
      // uncomment below and update the code to test the property rawDataHex
      //var instance = new Cryptoapis.PrepareATransactionFromAnAddressInHDWalletXPubYPubZPubRIBST();
      //expect(instance).to.be();
    });

    it('should have the property recipient (base name: "recipient")', function() {
      // uncomment below and update the code to test the property recipient
      //var instance = new Cryptoapis.PrepareATransactionFromAnAddressInHDWalletXPubYPubZPubRIBST();
      //expect(instance).to.be();
    });

    it('should have the property refBlockBytes (base name: "refBlockBytes")', function() {
      // uncomment below and update the code to test the property refBlockBytes
      //var instance = new Cryptoapis.PrepareATransactionFromAnAddressInHDWalletXPubYPubZPubRIBST();
      //expect(instance).to.be();
    });

    it('should have the property refBlockHash (base name: "refBlockHash")', function() {
      // uncomment below and update the code to test the property refBlockHash
      //var instance = new Cryptoapis.PrepareATransactionFromAnAddressInHDWalletXPubYPubZPubRIBST();
      //expect(instance).to.be();
    });

    it('should have the property sender (base name: "sender")', function() {
      // uncomment below and update the code to test the property sender
      //var instance = new Cryptoapis.PrepareATransactionFromAnAddressInHDWalletXPubYPubZPubRIBST();
      //expect(instance).to.be();
    });

    it('should have the property timestamp (base name: "timestamp")', function() {
      // uncomment below and update the code to test the property timestamp
      //var instance = new Cryptoapis.PrepareATransactionFromAnAddressInHDWalletXPubYPubZPubRIBST();
      //expect(instance).to.be();
    });

    it('should have the property transactionId (base name: "transactionId")', function() {
      // uncomment below and update the code to test the property transactionId
      //var instance = new Cryptoapis.PrepareATransactionFromAnAddressInHDWalletXPubYPubZPubRIBST();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new Cryptoapis.PrepareATransactionFromAnAddressInHDWalletXPubYPubZPubRIBST();
      //expect(instance).to.be();
    });

    it('should have the property typeUrl (base name: "typeUrl")', function() {
      // uncomment below and update the code to test the property typeUrl
      //var instance = new Cryptoapis.PrepareATransactionFromAnAddressInHDWalletXPubYPubZPubRIBST();
      //expect(instance).to.be();
    });

    it('should have the property unit (base name: "unit")', function() {
      // uncomment below and update the code to test the property unit
      //var instance = new Cryptoapis.PrepareATransactionFromAnAddressInHDWalletXPubYPubZPubRIBST();
      //expect(instance).to.be();
    });

    it('should have the property visible (base name: "visible")', function() {
      // uncomment below and update the code to test the property visible
      //var instance = new Cryptoapis.PrepareATransactionFromAnAddressInHDWalletXPubYPubZPubRIBST();
      //expect(instance).to.be();
    });

  });

}));
