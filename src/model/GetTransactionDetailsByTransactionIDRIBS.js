/**
 * CryptoAPIs
 * Crypto APIs is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2021-03-20
 * Contact: developers@cryptoapis.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetTransactionDetailsByTransactionIDRIBSB from './GetTransactionDetailsByTransactionIDRIBSB';
import GetTransactionDetailsByTransactionIDRIBSBC from './GetTransactionDetailsByTransactionIDRIBSBC';
import GetTransactionDetailsByTransactionIDRIBSBSC from './GetTransactionDetailsByTransactionIDRIBSBSC';
import GetTransactionDetailsByTransactionIDRIBSBSCGasPrice from './GetTransactionDetailsByTransactionIDRIBSBSCGasPrice';
import GetTransactionDetailsByTransactionIDRIBSD from './GetTransactionDetailsByTransactionIDRIBSD';
import GetTransactionDetailsByTransactionIDRIBSD2 from './GetTransactionDetailsByTransactionIDRIBSD2';
import GetTransactionDetailsByTransactionIDRIBSE from './GetTransactionDetailsByTransactionIDRIBSE';
import GetTransactionDetailsByTransactionIDRIBSEC from './GetTransactionDetailsByTransactionIDRIBSEC';
import GetTransactionDetailsByTransactionIDRIBSL from './GetTransactionDetailsByTransactionIDRIBSL';
import GetTransactionDetailsByTransactionIDRIBSZ from './GetTransactionDetailsByTransactionIDRIBSZ';
import GetTransactionDetailsByTransactionIDRIBSZVJoinSplitInner from './GetTransactionDetailsByTransactionIDRIBSZVJoinSplitInner';
import GetTransactionDetailsByTransactionIDRIBSZVShieldedOutputInner from './GetTransactionDetailsByTransactionIDRIBSZVShieldedOutputInner';
import GetTransactionDetailsByTransactionIDRIBSZVShieldedSpendInner from './GetTransactionDetailsByTransactionIDRIBSZVShieldedSpendInner';
import GetTransactionDetailsByTransactionIDRIBSZVinInner from './GetTransactionDetailsByTransactionIDRIBSZVinInner';
import GetTransactionDetailsByTransactionIDRIBSZVoutInner from './GetTransactionDetailsByTransactionIDRIBSZVoutInner';

/**
 * The GetTransactionDetailsByTransactionIDRIBS model module.
 * @module model/GetTransactionDetailsByTransactionIDRIBS
 * @version 1.11.0
 */
class GetTransactionDetailsByTransactionIDRIBS {
    /**
     * Constructs a new <code>GetTransactionDetailsByTransactionIDRIBS</code>.
     * @alias module:model/GetTransactionDetailsByTransactionIDRIBS
     * @param {(module:model/GetTransactionDetailsByTransactionIDRIBSB|module:model/GetTransactionDetailsByTransactionIDRIBSBC|module:model/GetTransactionDetailsByTransactionIDRIBSBSC|module:model/GetTransactionDetailsByTransactionIDRIBSD|module:model/GetTransactionDetailsByTransactionIDRIBSD2|module:model/GetTransactionDetailsByTransactionIDRIBSE|module:model/GetTransactionDetailsByTransactionIDRIBSEC|module:model/GetTransactionDetailsByTransactionIDRIBSL|module:model/GetTransactionDetailsByTransactionIDRIBSZ)} instance The actual instance to initialize GetTransactionDetailsByTransactionIDRIBS.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "GetTransactionDetailsByTransactionIDRIBSB") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                GetTransactionDetailsByTransactionIDRIBSB.validateJSON(instance); // throw an exception if no match
                // create GetTransactionDetailsByTransactionIDRIBSB from JS object
                this.actualInstance = GetTransactionDetailsByTransactionIDRIBSB.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into GetTransactionDetailsByTransactionIDRIBSB
            errorMessages.push("Failed to construct GetTransactionDetailsByTransactionIDRIBSB: " + err)
        }

        try {
            if (typeof instance === "GetTransactionDetailsByTransactionIDRIBSBC") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                GetTransactionDetailsByTransactionIDRIBSBC.validateJSON(instance); // throw an exception if no match
                // create GetTransactionDetailsByTransactionIDRIBSBC from JS object
                this.actualInstance = GetTransactionDetailsByTransactionIDRIBSBC.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into GetTransactionDetailsByTransactionIDRIBSBC
            errorMessages.push("Failed to construct GetTransactionDetailsByTransactionIDRIBSBC: " + err)
        }

        try {
            if (typeof instance === "GetTransactionDetailsByTransactionIDRIBSL") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                GetTransactionDetailsByTransactionIDRIBSL.validateJSON(instance); // throw an exception if no match
                // create GetTransactionDetailsByTransactionIDRIBSL from JS object
                this.actualInstance = GetTransactionDetailsByTransactionIDRIBSL.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into GetTransactionDetailsByTransactionIDRIBSL
            errorMessages.push("Failed to construct GetTransactionDetailsByTransactionIDRIBSL: " + err)
        }

        try {
            if (typeof instance === "GetTransactionDetailsByTransactionIDRIBSD") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                GetTransactionDetailsByTransactionIDRIBSD.validateJSON(instance); // throw an exception if no match
                // create GetTransactionDetailsByTransactionIDRIBSD from JS object
                this.actualInstance = GetTransactionDetailsByTransactionIDRIBSD.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into GetTransactionDetailsByTransactionIDRIBSD
            errorMessages.push("Failed to construct GetTransactionDetailsByTransactionIDRIBSD: " + err)
        }

        try {
            if (typeof instance === "GetTransactionDetailsByTransactionIDRIBSD2") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                GetTransactionDetailsByTransactionIDRIBSD2.validateJSON(instance); // throw an exception if no match
                // create GetTransactionDetailsByTransactionIDRIBSD2 from JS object
                this.actualInstance = GetTransactionDetailsByTransactionIDRIBSD2.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into GetTransactionDetailsByTransactionIDRIBSD2
            errorMessages.push("Failed to construct GetTransactionDetailsByTransactionIDRIBSD2: " + err)
        }

        try {
            if (typeof instance === "GetTransactionDetailsByTransactionIDRIBSE") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                GetTransactionDetailsByTransactionIDRIBSE.validateJSON(instance); // throw an exception if no match
                // create GetTransactionDetailsByTransactionIDRIBSE from JS object
                this.actualInstance = GetTransactionDetailsByTransactionIDRIBSE.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into GetTransactionDetailsByTransactionIDRIBSE
            errorMessages.push("Failed to construct GetTransactionDetailsByTransactionIDRIBSE: " + err)
        }

        try {
            if (typeof instance === "GetTransactionDetailsByTransactionIDRIBSEC") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                GetTransactionDetailsByTransactionIDRIBSEC.validateJSON(instance); // throw an exception if no match
                // create GetTransactionDetailsByTransactionIDRIBSEC from JS object
                this.actualInstance = GetTransactionDetailsByTransactionIDRIBSEC.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into GetTransactionDetailsByTransactionIDRIBSEC
            errorMessages.push("Failed to construct GetTransactionDetailsByTransactionIDRIBSEC: " + err)
        }

        try {
            if (typeof instance === "GetTransactionDetailsByTransactionIDRIBSBSC") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                GetTransactionDetailsByTransactionIDRIBSBSC.validateJSON(instance); // throw an exception if no match
                // create GetTransactionDetailsByTransactionIDRIBSBSC from JS object
                this.actualInstance = GetTransactionDetailsByTransactionIDRIBSBSC.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into GetTransactionDetailsByTransactionIDRIBSBSC
            errorMessages.push("Failed to construct GetTransactionDetailsByTransactionIDRIBSBSC: " + err)
        }

        try {
            if (typeof instance === "GetTransactionDetailsByTransactionIDRIBSZ") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                GetTransactionDetailsByTransactionIDRIBSZ.validateJSON(instance); // throw an exception if no match
                // create GetTransactionDetailsByTransactionIDRIBSZ from JS object
                this.actualInstance = GetTransactionDetailsByTransactionIDRIBSZ.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into GetTransactionDetailsByTransactionIDRIBSZ
            errorMessages.push("Failed to construct GetTransactionDetailsByTransactionIDRIBSZ: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `GetTransactionDetailsByTransactionIDRIBS` with oneOf schemas GetTransactionDetailsByTransactionIDRIBSB, GetTransactionDetailsByTransactionIDRIBSBC, GetTransactionDetailsByTransactionIDRIBSBSC, GetTransactionDetailsByTransactionIDRIBSD, GetTransactionDetailsByTransactionIDRIBSD2, GetTransactionDetailsByTransactionIDRIBSE, GetTransactionDetailsByTransactionIDRIBSEC, GetTransactionDetailsByTransactionIDRIBSL, GetTransactionDetailsByTransactionIDRIBSZ. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `GetTransactionDetailsByTransactionIDRIBS` with oneOf schemas GetTransactionDetailsByTransactionIDRIBSB, GetTransactionDetailsByTransactionIDRIBSBC, GetTransactionDetailsByTransactionIDRIBSBSC, GetTransactionDetailsByTransactionIDRIBSD, GetTransactionDetailsByTransactionIDRIBSD2, GetTransactionDetailsByTransactionIDRIBSE, GetTransactionDetailsByTransactionIDRIBSEC, GetTransactionDetailsByTransactionIDRIBSL, GetTransactionDetailsByTransactionIDRIBSZ. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>GetTransactionDetailsByTransactionIDRIBS</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetTransactionDetailsByTransactionIDRIBS} obj Optional instance to populate.
     * @return {module:model/GetTransactionDetailsByTransactionIDRIBS} The populated <code>GetTransactionDetailsByTransactionIDRIBS</code> instance.
     */
    static constructFromObject(data, obj) {
        return new GetTransactionDetailsByTransactionIDRIBS(data);
    }

    /**
     * Gets the actual instance, which can be <code>GetTransactionDetailsByTransactionIDRIBSB</code>, <code>GetTransactionDetailsByTransactionIDRIBSBC</code>, <code>GetTransactionDetailsByTransactionIDRIBSBSC</code>, <code>GetTransactionDetailsByTransactionIDRIBSD</code>, <code>GetTransactionDetailsByTransactionIDRIBSD2</code>, <code>GetTransactionDetailsByTransactionIDRIBSE</code>, <code>GetTransactionDetailsByTransactionIDRIBSEC</code>, <code>GetTransactionDetailsByTransactionIDRIBSL</code>, <code>GetTransactionDetailsByTransactionIDRIBSZ</code>.
     * @return {(module:model/GetTransactionDetailsByTransactionIDRIBSB|module:model/GetTransactionDetailsByTransactionIDRIBSBC|module:model/GetTransactionDetailsByTransactionIDRIBSBSC|module:model/GetTransactionDetailsByTransactionIDRIBSD|module:model/GetTransactionDetailsByTransactionIDRIBSD2|module:model/GetTransactionDetailsByTransactionIDRIBSE|module:model/GetTransactionDetailsByTransactionIDRIBSEC|module:model/GetTransactionDetailsByTransactionIDRIBSL|module:model/GetTransactionDetailsByTransactionIDRIBSZ)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>GetTransactionDetailsByTransactionIDRIBSB</code>, <code>GetTransactionDetailsByTransactionIDRIBSBC</code>, <code>GetTransactionDetailsByTransactionIDRIBSBSC</code>, <code>GetTransactionDetailsByTransactionIDRIBSD</code>, <code>GetTransactionDetailsByTransactionIDRIBSD2</code>, <code>GetTransactionDetailsByTransactionIDRIBSE</code>, <code>GetTransactionDetailsByTransactionIDRIBSEC</code>, <code>GetTransactionDetailsByTransactionIDRIBSL</code>, <code>GetTransactionDetailsByTransactionIDRIBSZ</code>.
     * @param {(module:model/GetTransactionDetailsByTransactionIDRIBSB|module:model/GetTransactionDetailsByTransactionIDRIBSBC|module:model/GetTransactionDetailsByTransactionIDRIBSBSC|module:model/GetTransactionDetailsByTransactionIDRIBSD|module:model/GetTransactionDetailsByTransactionIDRIBSD2|module:model/GetTransactionDetailsByTransactionIDRIBSE|module:model/GetTransactionDetailsByTransactionIDRIBSEC|module:model/GetTransactionDetailsByTransactionIDRIBSL|module:model/GetTransactionDetailsByTransactionIDRIBSZ)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = GetTransactionDetailsByTransactionIDRIBS.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of GetTransactionDetailsByTransactionIDRIBS from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/GetTransactionDetailsByTransactionIDRIBS} An instance of GetTransactionDetailsByTransactionIDRIBS.
     */
    static fromJSON = function(json_string){
        return GetTransactionDetailsByTransactionIDRIBS.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * Represents the locktime on the transaction on the specific blockchain, i.e. the blockheight at which the transaction is valid.
 * @member {Number} locktime
 */
GetTransactionDetailsByTransactionIDRIBS.prototype['locktime'] = undefined;

/**
 * Represents the total size of this transaction.
 * @member {Number} size
 */
GetTransactionDetailsByTransactionIDRIBS.prototype['size'] = undefined;

/**
 * Represents the virtual size of this transaction.
 * @member {Number} vSize
 */
GetTransactionDetailsByTransactionIDRIBS.prototype['vSize'] = undefined;

/**
 * Defines the version of the transaction.
 * @member {Number} version
 */
GetTransactionDetailsByTransactionIDRIBS.prototype['version'] = undefined;

/**
 * Object Array representation of transaction inputs
 * @member {Array.<module:model/GetTransactionDetailsByTransactionIDRIBSZVinInner>} vin
 */
GetTransactionDetailsByTransactionIDRIBS.prototype['vin'] = undefined;

/**
 * Object Array representation of transaction outputs
 * @member {Array.<module:model/GetTransactionDetailsByTransactionIDRIBSZVoutInner>} vout
 */
GetTransactionDetailsByTransactionIDRIBS.prototype['vout'] = undefined;

/**
 * Represents the specific transaction contract
 * @member {String} contract
 */
GetTransactionDetailsByTransactionIDRIBS.prototype['contract'] = undefined;

/**
 * Represents the amount of gas used by this specific transaction alone.
 * @member {String} gasLimit
 */
GetTransactionDetailsByTransactionIDRIBS.prototype['gasLimit'] = undefined;

/**
 * @member {module:model/GetTransactionDetailsByTransactionIDRIBSBSCGasPrice} gasPrice
 */
GetTransactionDetailsByTransactionIDRIBS.prototype['gasPrice'] = undefined;

/**
 * Defines the unit of the gas price amount, e.g. BTC, ETH, XRP.
 * @member {String} gasUsed
 */
GetTransactionDetailsByTransactionIDRIBS.prototype['gasUsed'] = undefined;

/**
 * Represents additional information that is required for the transaction.
 * @member {String} inputData
 */
GetTransactionDetailsByTransactionIDRIBS.prototype['inputData'] = undefined;

/**
 * Represents the sequential running number for an address, starting from 0 for the first transaction. E.g., if the nonce of a transaction is 10, it would be the 11th transaction sent from the sender's address.
 * @member {Number} nonce
 */
GetTransactionDetailsByTransactionIDRIBS.prototype['nonce'] = undefined;

/**
 * Represents the status of this transaction.
 * @member {String} transactionStatus
 */
GetTransactionDetailsByTransactionIDRIBS.prototype['transactionStatus'] = undefined;

/**
 * It is used to enforce balance of Spend and Output transfers, in order to prevent their replay across transactions.
 * @member {String} bindingSig
 */
GetTransactionDetailsByTransactionIDRIBS.prototype['bindingSig'] = undefined;

/**
 * Represents a block height after which the transaction will expire.
 * @member {Number} expiryHeight
 */
GetTransactionDetailsByTransactionIDRIBS.prototype['expiryHeight'] = undefined;

/**
 * Represents an encoding of a JoinSplitSig public validating key.
 * @member {String} joinSplitPubKey
 */
GetTransactionDetailsByTransactionIDRIBS.prototype['joinSplitPubKey'] = undefined;

/**
 * Is used to sign transactions that contain at least one JoinSplit description.
 * @member {String} joinSplitSig
 */
GetTransactionDetailsByTransactionIDRIBS.prototype['joinSplitSig'] = undefined;

/**
 * \"Overwinter\" is the network upgrade for the Zcash blockchain.
 * @member {Boolean} overwintered
 */
GetTransactionDetailsByTransactionIDRIBS.prototype['overwintered'] = undefined;

/**
 * Represents a sequence of JoinSplit descriptions using BCTV14 proofs.
 * @member {Array.<module:model/GetTransactionDetailsByTransactionIDRIBSZVJoinSplitInner>} vJoinSplit
 */
GetTransactionDetailsByTransactionIDRIBS.prototype['vJoinSplit'] = undefined;

/**
 * Object Array representation of transaction output descriptions
 * @member {Array.<module:model/GetTransactionDetailsByTransactionIDRIBSZVShieldedOutputInner>} vShieldedOutput
 */
GetTransactionDetailsByTransactionIDRIBS.prototype['vShieldedOutput'] = undefined;

/**
 * Object Array representation of transaction spend descriptions
 * @member {Array.<module:model/GetTransactionDetailsByTransactionIDRIBSZVShieldedSpendInner>} vShieldedSpend
 */
GetTransactionDetailsByTransactionIDRIBS.prototype['vShieldedSpend'] = undefined;

/**
 * String representation of the transaction value balance
 * @member {String} valueBalance
 */
GetTransactionDetailsByTransactionIDRIBS.prototype['valueBalance'] = undefined;

/**
 * Represents the transaction version group ID.
 * @member {String} versionGroupId
 */
GetTransactionDetailsByTransactionIDRIBS.prototype['versionGroupId'] = undefined;


GetTransactionDetailsByTransactionIDRIBS.OneOf = ["GetTransactionDetailsByTransactionIDRIBSB", "GetTransactionDetailsByTransactionIDRIBSBC", "GetTransactionDetailsByTransactionIDRIBSBSC", "GetTransactionDetailsByTransactionIDRIBSD", "GetTransactionDetailsByTransactionIDRIBSD2", "GetTransactionDetailsByTransactionIDRIBSE", "GetTransactionDetailsByTransactionIDRIBSEC", "GetTransactionDetailsByTransactionIDRIBSL", "GetTransactionDetailsByTransactionIDRIBSZ"];

export default GetTransactionDetailsByTransactionIDRIBS;

