/**
 * CryptoAPIs
 * Crypto APIs is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2021-03-20
 * Contact: developers@cryptoapis.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ListTokensForwardingAutomationsRITSBOT from './ListTokensForwardingAutomationsRITSBOT';
import ListTokensForwardingAutomationsRITSET from './ListTokensForwardingAutomationsRITSET';

/**
 * The ListTokensForwardingAutomationsRITS model module.
 * @module model/ListTokensForwardingAutomationsRITS
 * @version 1.11.0
 */
class ListTokensForwardingAutomationsRITS {
    /**
     * Constructs a new <code>ListTokensForwardingAutomationsRITS</code>.
     * @alias module:model/ListTokensForwardingAutomationsRITS
     * @param {(module:model/ListTokensForwardingAutomationsRITSBOT|module:model/ListTokensForwardingAutomationsRITSET)} instance The actual instance to initialize ListTokensForwardingAutomationsRITS.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "ListTokensForwardingAutomationsRITSBOT") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                ListTokensForwardingAutomationsRITSBOT.validateJSON(instance); // throw an exception if no match
                // create ListTokensForwardingAutomationsRITSBOT from JS object
                this.actualInstance = ListTokensForwardingAutomationsRITSBOT.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into ListTokensForwardingAutomationsRITSBOT
            errorMessages.push("Failed to construct ListTokensForwardingAutomationsRITSBOT: " + err)
        }

        try {
            if (typeof instance === "ListTokensForwardingAutomationsRITSET") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                ListTokensForwardingAutomationsRITSET.validateJSON(instance); // throw an exception if no match
                // create ListTokensForwardingAutomationsRITSET from JS object
                this.actualInstance = ListTokensForwardingAutomationsRITSET.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into ListTokensForwardingAutomationsRITSET
            errorMessages.push("Failed to construct ListTokensForwardingAutomationsRITSET: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `ListTokensForwardingAutomationsRITS` with oneOf schemas ListTokensForwardingAutomationsRITSBOT, ListTokensForwardingAutomationsRITSET. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `ListTokensForwardingAutomationsRITS` with oneOf schemas ListTokensForwardingAutomationsRITSBOT, ListTokensForwardingAutomationsRITSET. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>ListTokensForwardingAutomationsRITS</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListTokensForwardingAutomationsRITS} obj Optional instance to populate.
     * @return {module:model/ListTokensForwardingAutomationsRITS} The populated <code>ListTokensForwardingAutomationsRITS</code> instance.
     */
    static constructFromObject(data, obj) {
        return new ListTokensForwardingAutomationsRITS(data);
    }

    /**
     * Gets the actual instance, which can be <code>ListTokensForwardingAutomationsRITSBOT</code>, <code>ListTokensForwardingAutomationsRITSET</code>.
     * @return {(module:model/ListTokensForwardingAutomationsRITSBOT|module:model/ListTokensForwardingAutomationsRITSET)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>ListTokensForwardingAutomationsRITSBOT</code>, <code>ListTokensForwardingAutomationsRITSET</code>.
     * @param {(module:model/ListTokensForwardingAutomationsRITSBOT|module:model/ListTokensForwardingAutomationsRITSET)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = ListTokensForwardingAutomationsRITS.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of ListTokensForwardingAutomationsRITS from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/ListTokensForwardingAutomationsRITS} An instance of ListTokensForwardingAutomationsRITS.
     */
    static fromJSON = function(json_string){
        return ListTokensForwardingAutomationsRITS.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * Defines the Property ID of the Omni Layer token.
 * @member {Number} propertyId
 */
ListTokensForwardingAutomationsRITS.prototype['propertyId'] = undefined;

/**
 * Defines the token contract address.
 * @member {String} contractAddress
 */
ListTokensForwardingAutomationsRITS.prototype['contractAddress'] = undefined;


ListTokensForwardingAutomationsRITS.OneOf = ["ListTokensForwardingAutomationsRITSBOT", "ListTokensForwardingAutomationsRITSET"];

export default ListTokensForwardingAutomationsRITS;

