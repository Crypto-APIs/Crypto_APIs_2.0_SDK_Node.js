/**
 * CryptoAPIs
 * Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: developers@cryptoapis.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetTransactionDetailsByTransactionIDRIBSZVShieldedOutput from './GetTransactionDetailsByTransactionIDRIBSZVShieldedOutput';
import ListUnspentTransactionOutputsByAddressRIBlockchainSpecificVJoinSplit from './ListUnspentTransactionOutputsByAddressRIBlockchainSpecificVJoinSplit';
import ListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend from './ListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend';

/**
 * The ListUnspentTransactionOutputsByAddressRIBlockchainSpecific model module.
 * @module model/ListUnspentTransactionOutputsByAddressRIBlockchainSpecific
 * @version 1.4.0
 */
class ListUnspentTransactionOutputsByAddressRIBlockchainSpecific {
    /**
     * Constructs a new <code>ListUnspentTransactionOutputsByAddressRIBlockchainSpecific</code>.
     * @alias module:model/ListUnspentTransactionOutputsByAddressRIBlockchainSpecific
     * @param vSize {Number} Represents the virtual size of this transaction
     * @param bindingSig {String} It is used to enforce balance of Spend and Output transfers, in order to prevent their replay across transactions.
     * @param expiryHeight {Number} Represents a block height after which the transaction will expire.
     * @param joinSplitPubKey {String} Represents an encoding of a JoinSplitSig public validating key.
     * @param joinSplitSig {String} Is used to sign transactions that contain at least one JoinSplit description.
     * @param overwintered {Boolean} \"Overwinter\" is the network upgrade for the Zcash blockchain.
     * @param vShieldedSpend {Array.<module:model/ListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend>} Object Array representation of transaction spend descriptions
     * @param valueBalance {String} Defines the transaction value balance.
     * @param versionGroupId {String} Represents the transaction version group ID.
     */
    constructor(vSize, bindingSig, expiryHeight, joinSplitPubKey, joinSplitSig, overwintered, vShieldedSpend, valueBalance, versionGroupId) { 
        
        ListUnspentTransactionOutputsByAddressRIBlockchainSpecific.initialize(this, vSize, bindingSig, expiryHeight, joinSplitPubKey, joinSplitSig, overwintered, vShieldedSpend, valueBalance, versionGroupId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, vSize, bindingSig, expiryHeight, joinSplitPubKey, joinSplitSig, overwintered, vShieldedSpend, valueBalance, versionGroupId) { 
        obj['vSize'] = vSize;
        obj['bindingSig'] = bindingSig;
        obj['expiryHeight'] = expiryHeight;
        obj['joinSplitPubKey'] = joinSplitPubKey;
        obj['joinSplitSig'] = joinSplitSig;
        obj['overwintered'] = overwintered;
        obj['vShieldedSpend'] = vShieldedSpend;
        obj['valueBalance'] = valueBalance;
        obj['versionGroupId'] = versionGroupId;
    }

    /**
     * Constructs a <code>ListUnspentTransactionOutputsByAddressRIBlockchainSpecific</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListUnspentTransactionOutputsByAddressRIBlockchainSpecific} obj Optional instance to populate.
     * @return {module:model/ListUnspentTransactionOutputsByAddressRIBlockchainSpecific} The populated <code>ListUnspentTransactionOutputsByAddressRIBlockchainSpecific</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ListUnspentTransactionOutputsByAddressRIBlockchainSpecific();

            if (data.hasOwnProperty('vSize')) {
                obj['vSize'] = ApiClient.convertToType(data['vSize'], 'Number');
            }
            if (data.hasOwnProperty('bindingSig')) {
                obj['bindingSig'] = ApiClient.convertToType(data['bindingSig'], 'String');
            }
            if (data.hasOwnProperty('expiryHeight')) {
                obj['expiryHeight'] = ApiClient.convertToType(data['expiryHeight'], 'Number');
            }
            if (data.hasOwnProperty('joinSplitPubKey')) {
                obj['joinSplitPubKey'] = ApiClient.convertToType(data['joinSplitPubKey'], 'String');
            }
            if (data.hasOwnProperty('joinSplitSig')) {
                obj['joinSplitSig'] = ApiClient.convertToType(data['joinSplitSig'], 'String');
            }
            if (data.hasOwnProperty('overwintered')) {
                obj['overwintered'] = ApiClient.convertToType(data['overwintered'], 'Boolean');
            }
            if (data.hasOwnProperty('vJoinSplit')) {
                obj['vJoinSplit'] = ApiClient.convertToType(data['vJoinSplit'], [ListUnspentTransactionOutputsByAddressRIBlockchainSpecificVJoinSplit]);
            }
            if (data.hasOwnProperty('vShieldedOutput')) {
                obj['vShieldedOutput'] = ApiClient.convertToType(data['vShieldedOutput'], [GetTransactionDetailsByTransactionIDRIBSZVShieldedOutput]);
            }
            if (data.hasOwnProperty('vShieldedSpend')) {
                obj['vShieldedSpend'] = ApiClient.convertToType(data['vShieldedSpend'], [ListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend]);
            }
            if (data.hasOwnProperty('valueBalance')) {
                obj['valueBalance'] = ApiClient.convertToType(data['valueBalance'], 'String');
            }
            if (data.hasOwnProperty('versionGroupId')) {
                obj['versionGroupId'] = ApiClient.convertToType(data['versionGroupId'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Represents the virtual size of this transaction
 * @member {Number} vSize
 */
ListUnspentTransactionOutputsByAddressRIBlockchainSpecific.prototype['vSize'] = undefined;

/**
 * It is used to enforce balance of Spend and Output transfers, in order to prevent their replay across transactions.
 * @member {String} bindingSig
 */
ListUnspentTransactionOutputsByAddressRIBlockchainSpecific.prototype['bindingSig'] = undefined;

/**
 * Represents a block height after which the transaction will expire.
 * @member {Number} expiryHeight
 */
ListUnspentTransactionOutputsByAddressRIBlockchainSpecific.prototype['expiryHeight'] = undefined;

/**
 * Represents an encoding of a JoinSplitSig public validating key.
 * @member {String} joinSplitPubKey
 */
ListUnspentTransactionOutputsByAddressRIBlockchainSpecific.prototype['joinSplitPubKey'] = undefined;

/**
 * Is used to sign transactions that contain at least one JoinSplit description.
 * @member {String} joinSplitSig
 */
ListUnspentTransactionOutputsByAddressRIBlockchainSpecific.prototype['joinSplitSig'] = undefined;

/**
 * \"Overwinter\" is the network upgrade for the Zcash blockchain.
 * @member {Boolean} overwintered
 */
ListUnspentTransactionOutputsByAddressRIBlockchainSpecific.prototype['overwintered'] = undefined;

/**
 * Represents a sequence of JoinSplit descriptions using BCTV14 proofs.
 * @member {Array.<module:model/ListUnspentTransactionOutputsByAddressRIBlockchainSpecificVJoinSplit>} vJoinSplit
 */
ListUnspentTransactionOutputsByAddressRIBlockchainSpecific.prototype['vJoinSplit'] = undefined;

/**
 * Object Array representation of transaction output descriptions
 * @member {Array.<module:model/GetTransactionDetailsByTransactionIDRIBSZVShieldedOutput>} vShieldedOutput
 */
ListUnspentTransactionOutputsByAddressRIBlockchainSpecific.prototype['vShieldedOutput'] = undefined;

/**
 * Object Array representation of transaction spend descriptions
 * @member {Array.<module:model/ListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend>} vShieldedSpend
 */
ListUnspentTransactionOutputsByAddressRIBlockchainSpecific.prototype['vShieldedSpend'] = undefined;

/**
 * Defines the transaction value balance.
 * @member {String} valueBalance
 */
ListUnspentTransactionOutputsByAddressRIBlockchainSpecific.prototype['valueBalance'] = undefined;

/**
 * Represents the transaction version group ID.
 * @member {String} versionGroupId
 */
ListUnspentTransactionOutputsByAddressRIBlockchainSpecific.prototype['versionGroupId'] = undefined;






export default ListUnspentTransactionOutputsByAddressRIBlockchainSpecific;

