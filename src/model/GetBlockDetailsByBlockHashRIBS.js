/**
 * CryptoAPIs
 * Crypto APIs is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2021-03-20
 * Contact: developers@cryptoapis.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetBlockDetailsByBlockHashRIBSB from './GetBlockDetailsByBlockHashRIBSB';
import GetBlockDetailsByBlockHashRIBSBC from './GetBlockDetailsByBlockHashRIBSBC';
import GetBlockDetailsByBlockHashRIBSBSC from './GetBlockDetailsByBlockHashRIBSBSC';
import GetBlockDetailsByBlockHashRIBSD from './GetBlockDetailsByBlockHashRIBSD';
import GetBlockDetailsByBlockHashRIBSD2 from './GetBlockDetailsByBlockHashRIBSD2';
import GetBlockDetailsByBlockHashRIBSE from './GetBlockDetailsByBlockHashRIBSE';
import GetBlockDetailsByBlockHashRIBSEC from './GetBlockDetailsByBlockHashRIBSEC';
import GetBlockDetailsByBlockHashRIBSL from './GetBlockDetailsByBlockHashRIBSL';
import GetBlockDetailsByBlockHashRIBSZ from './GetBlockDetailsByBlockHashRIBSZ';
import GetBlockDetailsByBlockHashRIBSZ2 from './GetBlockDetailsByBlockHashRIBSZ2';

/**
 * The GetBlockDetailsByBlockHashRIBS model module.
 * @module model/GetBlockDetailsByBlockHashRIBS
 * @version 1.11.0
 */
class GetBlockDetailsByBlockHashRIBS {
    /**
     * Constructs a new <code>GetBlockDetailsByBlockHashRIBS</code>.
     * @alias module:model/GetBlockDetailsByBlockHashRIBS
     * @param {(module:model/GetBlockDetailsByBlockHashRIBSB|module:model/GetBlockDetailsByBlockHashRIBSBC|module:model/GetBlockDetailsByBlockHashRIBSBSC|module:model/GetBlockDetailsByBlockHashRIBSD|module:model/GetBlockDetailsByBlockHashRIBSD2|module:model/GetBlockDetailsByBlockHashRIBSE|module:model/GetBlockDetailsByBlockHashRIBSEC|module:model/GetBlockDetailsByBlockHashRIBSL|module:model/GetBlockDetailsByBlockHashRIBSZ|module:model/GetBlockDetailsByBlockHashRIBSZ2)} instance The actual instance to initialize GetBlockDetailsByBlockHashRIBS.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "GetBlockDetailsByBlockHashRIBSB") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                GetBlockDetailsByBlockHashRIBSB.validateJSON(instance); // throw an exception if no match
                // create GetBlockDetailsByBlockHashRIBSB from JS object
                this.actualInstance = GetBlockDetailsByBlockHashRIBSB.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into GetBlockDetailsByBlockHashRIBSB
            errorMessages.push("Failed to construct GetBlockDetailsByBlockHashRIBSB: " + err)
        }

        try {
            if (typeof instance === "GetBlockDetailsByBlockHashRIBSE") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                GetBlockDetailsByBlockHashRIBSE.validateJSON(instance); // throw an exception if no match
                // create GetBlockDetailsByBlockHashRIBSE from JS object
                this.actualInstance = GetBlockDetailsByBlockHashRIBSE.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into GetBlockDetailsByBlockHashRIBSE
            errorMessages.push("Failed to construct GetBlockDetailsByBlockHashRIBSE: " + err)
        }

        try {
            if (typeof instance === "GetBlockDetailsByBlockHashRIBSEC") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                GetBlockDetailsByBlockHashRIBSEC.validateJSON(instance); // throw an exception if no match
                // create GetBlockDetailsByBlockHashRIBSEC from JS object
                this.actualInstance = GetBlockDetailsByBlockHashRIBSEC.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into GetBlockDetailsByBlockHashRIBSEC
            errorMessages.push("Failed to construct GetBlockDetailsByBlockHashRIBSEC: " + err)
        }

        try {
            if (typeof instance === "GetBlockDetailsByBlockHashRIBSBC") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                GetBlockDetailsByBlockHashRIBSBC.validateJSON(instance); // throw an exception if no match
                // create GetBlockDetailsByBlockHashRIBSBC from JS object
                this.actualInstance = GetBlockDetailsByBlockHashRIBSBC.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into GetBlockDetailsByBlockHashRIBSBC
            errorMessages.push("Failed to construct GetBlockDetailsByBlockHashRIBSBC: " + err)
        }

        try {
            if (typeof instance === "GetBlockDetailsByBlockHashRIBSL") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                GetBlockDetailsByBlockHashRIBSL.validateJSON(instance); // throw an exception if no match
                // create GetBlockDetailsByBlockHashRIBSL from JS object
                this.actualInstance = GetBlockDetailsByBlockHashRIBSL.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into GetBlockDetailsByBlockHashRIBSL
            errorMessages.push("Failed to construct GetBlockDetailsByBlockHashRIBSL: " + err)
        }

        try {
            if (typeof instance === "GetBlockDetailsByBlockHashRIBSD") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                GetBlockDetailsByBlockHashRIBSD.validateJSON(instance); // throw an exception if no match
                // create GetBlockDetailsByBlockHashRIBSD from JS object
                this.actualInstance = GetBlockDetailsByBlockHashRIBSD.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into GetBlockDetailsByBlockHashRIBSD
            errorMessages.push("Failed to construct GetBlockDetailsByBlockHashRIBSD: " + err)
        }

        try {
            if (typeof instance === "GetBlockDetailsByBlockHashRIBSD2") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                GetBlockDetailsByBlockHashRIBSD2.validateJSON(instance); // throw an exception if no match
                // create GetBlockDetailsByBlockHashRIBSD2 from JS object
                this.actualInstance = GetBlockDetailsByBlockHashRIBSD2.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into GetBlockDetailsByBlockHashRIBSD2
            errorMessages.push("Failed to construct GetBlockDetailsByBlockHashRIBSD2: " + err)
        }

        try {
            if (typeof instance === "GetBlockDetailsByBlockHashRIBSBSC") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                GetBlockDetailsByBlockHashRIBSBSC.validateJSON(instance); // throw an exception if no match
                // create GetBlockDetailsByBlockHashRIBSBSC from JS object
                this.actualInstance = GetBlockDetailsByBlockHashRIBSBSC.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into GetBlockDetailsByBlockHashRIBSBSC
            errorMessages.push("Failed to construct GetBlockDetailsByBlockHashRIBSBSC: " + err)
        }

        try {
            if (typeof instance === "GetBlockDetailsByBlockHashRIBSZ") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                GetBlockDetailsByBlockHashRIBSZ.validateJSON(instance); // throw an exception if no match
                // create GetBlockDetailsByBlockHashRIBSZ from JS object
                this.actualInstance = GetBlockDetailsByBlockHashRIBSZ.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into GetBlockDetailsByBlockHashRIBSZ
            errorMessages.push("Failed to construct GetBlockDetailsByBlockHashRIBSZ: " + err)
        }

        try {
            if (typeof instance === "GetBlockDetailsByBlockHashRIBSZ2") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                GetBlockDetailsByBlockHashRIBSZ2.validateJSON(instance); // throw an exception if no match
                // create GetBlockDetailsByBlockHashRIBSZ2 from JS object
                this.actualInstance = GetBlockDetailsByBlockHashRIBSZ2.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into GetBlockDetailsByBlockHashRIBSZ2
            errorMessages.push("Failed to construct GetBlockDetailsByBlockHashRIBSZ2: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `GetBlockDetailsByBlockHashRIBS` with oneOf schemas GetBlockDetailsByBlockHashRIBSB, GetBlockDetailsByBlockHashRIBSBC, GetBlockDetailsByBlockHashRIBSBSC, GetBlockDetailsByBlockHashRIBSD, GetBlockDetailsByBlockHashRIBSD2, GetBlockDetailsByBlockHashRIBSE, GetBlockDetailsByBlockHashRIBSEC, GetBlockDetailsByBlockHashRIBSL, GetBlockDetailsByBlockHashRIBSZ, GetBlockDetailsByBlockHashRIBSZ2. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `GetBlockDetailsByBlockHashRIBS` with oneOf schemas GetBlockDetailsByBlockHashRIBSB, GetBlockDetailsByBlockHashRIBSBC, GetBlockDetailsByBlockHashRIBSBSC, GetBlockDetailsByBlockHashRIBSD, GetBlockDetailsByBlockHashRIBSD2, GetBlockDetailsByBlockHashRIBSE, GetBlockDetailsByBlockHashRIBSEC, GetBlockDetailsByBlockHashRIBSL, GetBlockDetailsByBlockHashRIBSZ, GetBlockDetailsByBlockHashRIBSZ2. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>GetBlockDetailsByBlockHashRIBS</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetBlockDetailsByBlockHashRIBS} obj Optional instance to populate.
     * @return {module:model/GetBlockDetailsByBlockHashRIBS} The populated <code>GetBlockDetailsByBlockHashRIBS</code> instance.
     */
    static constructFromObject(data, obj) {
        return new GetBlockDetailsByBlockHashRIBS(data);
    }

    /**
     * Gets the actual instance, which can be <code>GetBlockDetailsByBlockHashRIBSB</code>, <code>GetBlockDetailsByBlockHashRIBSBC</code>, <code>GetBlockDetailsByBlockHashRIBSBSC</code>, <code>GetBlockDetailsByBlockHashRIBSD</code>, <code>GetBlockDetailsByBlockHashRIBSD2</code>, <code>GetBlockDetailsByBlockHashRIBSE</code>, <code>GetBlockDetailsByBlockHashRIBSEC</code>, <code>GetBlockDetailsByBlockHashRIBSL</code>, <code>GetBlockDetailsByBlockHashRIBSZ</code>, <code>GetBlockDetailsByBlockHashRIBSZ2</code>.
     * @return {(module:model/GetBlockDetailsByBlockHashRIBSB|module:model/GetBlockDetailsByBlockHashRIBSBC|module:model/GetBlockDetailsByBlockHashRIBSBSC|module:model/GetBlockDetailsByBlockHashRIBSD|module:model/GetBlockDetailsByBlockHashRIBSD2|module:model/GetBlockDetailsByBlockHashRIBSE|module:model/GetBlockDetailsByBlockHashRIBSEC|module:model/GetBlockDetailsByBlockHashRIBSL|module:model/GetBlockDetailsByBlockHashRIBSZ|module:model/GetBlockDetailsByBlockHashRIBSZ2)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>GetBlockDetailsByBlockHashRIBSB</code>, <code>GetBlockDetailsByBlockHashRIBSBC</code>, <code>GetBlockDetailsByBlockHashRIBSBSC</code>, <code>GetBlockDetailsByBlockHashRIBSD</code>, <code>GetBlockDetailsByBlockHashRIBSD2</code>, <code>GetBlockDetailsByBlockHashRIBSE</code>, <code>GetBlockDetailsByBlockHashRIBSEC</code>, <code>GetBlockDetailsByBlockHashRIBSL</code>, <code>GetBlockDetailsByBlockHashRIBSZ</code>, <code>GetBlockDetailsByBlockHashRIBSZ2</code>.
     * @param {(module:model/GetBlockDetailsByBlockHashRIBSB|module:model/GetBlockDetailsByBlockHashRIBSBC|module:model/GetBlockDetailsByBlockHashRIBSBSC|module:model/GetBlockDetailsByBlockHashRIBSD|module:model/GetBlockDetailsByBlockHashRIBSD2|module:model/GetBlockDetailsByBlockHashRIBSE|module:model/GetBlockDetailsByBlockHashRIBSEC|module:model/GetBlockDetailsByBlockHashRIBSL|module:model/GetBlockDetailsByBlockHashRIBSZ|module:model/GetBlockDetailsByBlockHashRIBSZ2)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = GetBlockDetailsByBlockHashRIBS.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of GetBlockDetailsByBlockHashRIBS from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/GetBlockDetailsByBlockHashRIBS} An instance of GetBlockDetailsByBlockHashRIBS.
     */
    static fromJSON = function(json_string){
        return GetBlockDetailsByBlockHashRIBS.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * Represents a mathematical value of how hard it is to find a valid hash for this block.
 * @member {String} difficulty
 */
GetBlockDetailsByBlockHashRIBS.prototype['difficulty'] = undefined;

/**
 * Represents a specific sub-unit of Zcash. Bits have two-decimal precision
 * @member {String} bits
 */
GetBlockDetailsByBlockHashRIBS.prototype['bits'] = undefined;

/**
 * Represents a hexadecimal number of all the hashes necessary to produce the current chain. E.g., when converting 0000000000000000000000000000000000000000000086859f7a841475b236fd to a decimal you get 635262017308958427068157 hashes, or 635262 exahashes.
 * @member {String} chainwork
 */
GetBlockDetailsByBlockHashRIBS.prototype['chainwork'] = undefined;

/**
 * Defines the single and final (root) node of a Merkle tree. It is the combined hash of all transactions' hashes that are part of a blockchain block.
 * @member {String} merkleRoot
 */
GetBlockDetailsByBlockHashRIBS.prototype['merkleRoot'] = undefined;

/**
 * Represents a random value that can be adjusted to satisfy the Proof of Work.
 * @member {String} nonce
 */
GetBlockDetailsByBlockHashRIBS.prototype['nonce'] = undefined;

/**
 * Represents the total size of the block in Bytes.
 * @member {Number} size
 */
GetBlockDetailsByBlockHashRIBS.prototype['size'] = undefined;

/**
 * Defines the numeric representation of the block size excluding the witness data.
 * @member {Number} strippedSize
 */
GetBlockDetailsByBlockHashRIBS.prototype['strippedSize'] = undefined;

/**
 * Represents the block version number.
 * @member {Number} version
 */
GetBlockDetailsByBlockHashRIBS.prototype['version'] = undefined;

/**
 * Is the hexadecimal string representation of the block's version.
 * @member {String} versionHex
 */
GetBlockDetailsByBlockHashRIBS.prototype['versionHex'] = undefined;

/**
 * Represents a measurement to compare the size of different transactions to each other in proportion to the block size limit.
 * @member {Number} weight
 */
GetBlockDetailsByBlockHashRIBS.prototype['weight'] = undefined;

/**
 * Represents any data that can be included by the miner in the block.
 * @member {String} extraData
 */
GetBlockDetailsByBlockHashRIBS.prototype['extraData'] = undefined;

/**
 * Numeric representation of the block gas_limit
 * @member {Number} gasLimit
 */
GetBlockDetailsByBlockHashRIBS.prototype['gasLimit'] = undefined;

/**
 * Numeric representation of the block gas_limit
 * @member {Number} gasUsed
 */
GetBlockDetailsByBlockHashRIBS.prototype['gasUsed'] = undefined;

/**
 * Specifies the amount of time required for the block to be mined in seconds.
 * @member {Number} minedInSeconds
 */
GetBlockDetailsByBlockHashRIBS.prototype['minedInSeconds'] = undefined;

/**
 * Defines the combined hash of all uncles for a given paren
 * @member {String} sha3Uncles
 */
GetBlockDetailsByBlockHashRIBS.prototype['sha3Uncles'] = undefined;

/**
 * Defines the total difficulty of the chain until this block, i.e. how difficult it is for a specific miner to mine a new block.
 * @member {String} totalDifficulty
 */
GetBlockDetailsByBlockHashRIBS.prototype['totalDifficulty'] = undefined;

/**
 * @member {Array.<String>} uncles
 */
GetBlockDetailsByBlockHashRIBS.prototype['uncles'] = undefined;

/**
 * Numeric representation of the ds block
 * @member {Number} dsBlock
 */
GetBlockDetailsByBlockHashRIBS.prototype['dsBlock'] = undefined;

/**
 * Numeric representation of the ds difficulty
 * @member {String} dsDifficulty
 */
GetBlockDetailsByBlockHashRIBS.prototype['dsDifficulty'] = undefined;

/**
 * String representation of the ds leader
 * @member {String} dsLeader
 */
GetBlockDetailsByBlockHashRIBS.prototype['dsLeader'] = undefined;

/**
 * @member {Array.<String>} microBlocks
 */
GetBlockDetailsByBlockHashRIBS.prototype['microBlocks'] = undefined;


GetBlockDetailsByBlockHashRIBS.OneOf = ["GetBlockDetailsByBlockHashRIBSB", "GetBlockDetailsByBlockHashRIBSBC", "GetBlockDetailsByBlockHashRIBSBSC", "GetBlockDetailsByBlockHashRIBSD", "GetBlockDetailsByBlockHashRIBSD2", "GetBlockDetailsByBlockHashRIBSE", "GetBlockDetailsByBlockHashRIBSEC", "GetBlockDetailsByBlockHashRIBSL", "GetBlockDetailsByBlockHashRIBSZ", "GetBlockDetailsByBlockHashRIBSZ2"];

export default GetBlockDetailsByBlockHashRIBS;

