/**
 * CryptoAPIs
 * Crypto APIs is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2021-03-20
 * Contact: developers@cryptoapis.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetTransactionDetailsByTransactionIDRIBSZVShieldedOutputInner from './GetTransactionDetailsByTransactionIDRIBSZVShieldedOutputInner';
import GetTransactionDetailsByTransactionIDRIBSZVShieldedSpendInner from './GetTransactionDetailsByTransactionIDRIBSZVShieldedSpendInner';
import GetTransactionDetailsByTransactionIDRIBSZVoutInner from './GetTransactionDetailsByTransactionIDRIBSZVoutInner';
import ListConfirmedTransactionsByAddressAndTimeRangeRIBSB from './ListConfirmedTransactionsByAddressAndTimeRangeRIBSB';
import ListConfirmedTransactionsByAddressAndTimeRangeRIBSBC from './ListConfirmedTransactionsByAddressAndTimeRangeRIBSBC';
import ListConfirmedTransactionsByAddressAndTimeRangeRIBSBSC from './ListConfirmedTransactionsByAddressAndTimeRangeRIBSBSC';
import ListConfirmedTransactionsByAddressAndTimeRangeRIBSD from './ListConfirmedTransactionsByAddressAndTimeRangeRIBSD';
import ListConfirmedTransactionsByAddressAndTimeRangeRIBSD2 from './ListConfirmedTransactionsByAddressAndTimeRangeRIBSD2';
import ListConfirmedTransactionsByAddressAndTimeRangeRIBSE from './ListConfirmedTransactionsByAddressAndTimeRangeRIBSE';
import ListConfirmedTransactionsByAddressAndTimeRangeRIBSEC from './ListConfirmedTransactionsByAddressAndTimeRangeRIBSEC';
import ListConfirmedTransactionsByAddressAndTimeRangeRIBSL from './ListConfirmedTransactionsByAddressAndTimeRangeRIBSL';
import ListConfirmedTransactionsByAddressAndTimeRangeRIBSZ from './ListConfirmedTransactionsByAddressAndTimeRangeRIBSZ';
import ListConfirmedTransactionsByAddressRIBSBSCGasPrice from './ListConfirmedTransactionsByAddressRIBSBSCGasPrice';
import ListConfirmedTransactionsByAddressRIBSZVJoinSplitInner from './ListConfirmedTransactionsByAddressRIBSZVJoinSplitInner';
import ListConfirmedTransactionsByAddressRIBSZVinInner from './ListConfirmedTransactionsByAddressRIBSZVinInner';

/**
 * The ListConfirmedTransactionsByAddressAndTimeRangeRIBS model module.
 * @module model/ListConfirmedTransactionsByAddressAndTimeRangeRIBS
 * @version 1.11.0
 */
class ListConfirmedTransactionsByAddressAndTimeRangeRIBS {
    /**
     * Constructs a new <code>ListConfirmedTransactionsByAddressAndTimeRangeRIBS</code>.
     * @alias module:model/ListConfirmedTransactionsByAddressAndTimeRangeRIBS
     * @param {(module:model/ListConfirmedTransactionsByAddressAndTimeRangeRIBSB|module:model/ListConfirmedTransactionsByAddressAndTimeRangeRIBSBC|module:model/ListConfirmedTransactionsByAddressAndTimeRangeRIBSBSC|module:model/ListConfirmedTransactionsByAddressAndTimeRangeRIBSD|module:model/ListConfirmedTransactionsByAddressAndTimeRangeRIBSD2|module:model/ListConfirmedTransactionsByAddressAndTimeRangeRIBSE|module:model/ListConfirmedTransactionsByAddressAndTimeRangeRIBSEC|module:model/ListConfirmedTransactionsByAddressAndTimeRangeRIBSL|module:model/ListConfirmedTransactionsByAddressAndTimeRangeRIBSZ)} instance The actual instance to initialize ListConfirmedTransactionsByAddressAndTimeRangeRIBS.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "ListConfirmedTransactionsByAddressAndTimeRangeRIBSB") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                ListConfirmedTransactionsByAddressAndTimeRangeRIBSB.validateJSON(instance); // throw an exception if no match
                // create ListConfirmedTransactionsByAddressAndTimeRangeRIBSB from JS object
                this.actualInstance = ListConfirmedTransactionsByAddressAndTimeRangeRIBSB.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into ListConfirmedTransactionsByAddressAndTimeRangeRIBSB
            errorMessages.push("Failed to construct ListConfirmedTransactionsByAddressAndTimeRangeRIBSB: " + err)
        }

        try {
            if (typeof instance === "ListConfirmedTransactionsByAddressAndTimeRangeRIBSBC") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                ListConfirmedTransactionsByAddressAndTimeRangeRIBSBC.validateJSON(instance); // throw an exception if no match
                // create ListConfirmedTransactionsByAddressAndTimeRangeRIBSBC from JS object
                this.actualInstance = ListConfirmedTransactionsByAddressAndTimeRangeRIBSBC.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into ListConfirmedTransactionsByAddressAndTimeRangeRIBSBC
            errorMessages.push("Failed to construct ListConfirmedTransactionsByAddressAndTimeRangeRIBSBC: " + err)
        }

        try {
            if (typeof instance === "ListConfirmedTransactionsByAddressAndTimeRangeRIBSL") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                ListConfirmedTransactionsByAddressAndTimeRangeRIBSL.validateJSON(instance); // throw an exception if no match
                // create ListConfirmedTransactionsByAddressAndTimeRangeRIBSL from JS object
                this.actualInstance = ListConfirmedTransactionsByAddressAndTimeRangeRIBSL.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into ListConfirmedTransactionsByAddressAndTimeRangeRIBSL
            errorMessages.push("Failed to construct ListConfirmedTransactionsByAddressAndTimeRangeRIBSL: " + err)
        }

        try {
            if (typeof instance === "ListConfirmedTransactionsByAddressAndTimeRangeRIBSD") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                ListConfirmedTransactionsByAddressAndTimeRangeRIBSD.validateJSON(instance); // throw an exception if no match
                // create ListConfirmedTransactionsByAddressAndTimeRangeRIBSD from JS object
                this.actualInstance = ListConfirmedTransactionsByAddressAndTimeRangeRIBSD.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into ListConfirmedTransactionsByAddressAndTimeRangeRIBSD
            errorMessages.push("Failed to construct ListConfirmedTransactionsByAddressAndTimeRangeRIBSD: " + err)
        }

        try {
            if (typeof instance === "ListConfirmedTransactionsByAddressAndTimeRangeRIBSD2") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                ListConfirmedTransactionsByAddressAndTimeRangeRIBSD2.validateJSON(instance); // throw an exception if no match
                // create ListConfirmedTransactionsByAddressAndTimeRangeRIBSD2 from JS object
                this.actualInstance = ListConfirmedTransactionsByAddressAndTimeRangeRIBSD2.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into ListConfirmedTransactionsByAddressAndTimeRangeRIBSD2
            errorMessages.push("Failed to construct ListConfirmedTransactionsByAddressAndTimeRangeRIBSD2: " + err)
        }

        try {
            if (typeof instance === "ListConfirmedTransactionsByAddressAndTimeRangeRIBSEC") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                ListConfirmedTransactionsByAddressAndTimeRangeRIBSEC.validateJSON(instance); // throw an exception if no match
                // create ListConfirmedTransactionsByAddressAndTimeRangeRIBSEC from JS object
                this.actualInstance = ListConfirmedTransactionsByAddressAndTimeRangeRIBSEC.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into ListConfirmedTransactionsByAddressAndTimeRangeRIBSEC
            errorMessages.push("Failed to construct ListConfirmedTransactionsByAddressAndTimeRangeRIBSEC: " + err)
        }

        try {
            if (typeof instance === "ListConfirmedTransactionsByAddressAndTimeRangeRIBSE") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                ListConfirmedTransactionsByAddressAndTimeRangeRIBSE.validateJSON(instance); // throw an exception if no match
                // create ListConfirmedTransactionsByAddressAndTimeRangeRIBSE from JS object
                this.actualInstance = ListConfirmedTransactionsByAddressAndTimeRangeRIBSE.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into ListConfirmedTransactionsByAddressAndTimeRangeRIBSE
            errorMessages.push("Failed to construct ListConfirmedTransactionsByAddressAndTimeRangeRIBSE: " + err)
        }

        try {
            if (typeof instance === "ListConfirmedTransactionsByAddressAndTimeRangeRIBSBSC") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                ListConfirmedTransactionsByAddressAndTimeRangeRIBSBSC.validateJSON(instance); // throw an exception if no match
                // create ListConfirmedTransactionsByAddressAndTimeRangeRIBSBSC from JS object
                this.actualInstance = ListConfirmedTransactionsByAddressAndTimeRangeRIBSBSC.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into ListConfirmedTransactionsByAddressAndTimeRangeRIBSBSC
            errorMessages.push("Failed to construct ListConfirmedTransactionsByAddressAndTimeRangeRIBSBSC: " + err)
        }

        try {
            if (typeof instance === "ListConfirmedTransactionsByAddressAndTimeRangeRIBSZ") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                ListConfirmedTransactionsByAddressAndTimeRangeRIBSZ.validateJSON(instance); // throw an exception if no match
                // create ListConfirmedTransactionsByAddressAndTimeRangeRIBSZ from JS object
                this.actualInstance = ListConfirmedTransactionsByAddressAndTimeRangeRIBSZ.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into ListConfirmedTransactionsByAddressAndTimeRangeRIBSZ
            errorMessages.push("Failed to construct ListConfirmedTransactionsByAddressAndTimeRangeRIBSZ: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `ListConfirmedTransactionsByAddressAndTimeRangeRIBS` with oneOf schemas ListConfirmedTransactionsByAddressAndTimeRangeRIBSB, ListConfirmedTransactionsByAddressAndTimeRangeRIBSBC, ListConfirmedTransactionsByAddressAndTimeRangeRIBSBSC, ListConfirmedTransactionsByAddressAndTimeRangeRIBSD, ListConfirmedTransactionsByAddressAndTimeRangeRIBSD2, ListConfirmedTransactionsByAddressAndTimeRangeRIBSE, ListConfirmedTransactionsByAddressAndTimeRangeRIBSEC, ListConfirmedTransactionsByAddressAndTimeRangeRIBSL, ListConfirmedTransactionsByAddressAndTimeRangeRIBSZ. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `ListConfirmedTransactionsByAddressAndTimeRangeRIBS` with oneOf schemas ListConfirmedTransactionsByAddressAndTimeRangeRIBSB, ListConfirmedTransactionsByAddressAndTimeRangeRIBSBC, ListConfirmedTransactionsByAddressAndTimeRangeRIBSBSC, ListConfirmedTransactionsByAddressAndTimeRangeRIBSD, ListConfirmedTransactionsByAddressAndTimeRangeRIBSD2, ListConfirmedTransactionsByAddressAndTimeRangeRIBSE, ListConfirmedTransactionsByAddressAndTimeRangeRIBSEC, ListConfirmedTransactionsByAddressAndTimeRangeRIBSL, ListConfirmedTransactionsByAddressAndTimeRangeRIBSZ. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>ListConfirmedTransactionsByAddressAndTimeRangeRIBS</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListConfirmedTransactionsByAddressAndTimeRangeRIBS} obj Optional instance to populate.
     * @return {module:model/ListConfirmedTransactionsByAddressAndTimeRangeRIBS} The populated <code>ListConfirmedTransactionsByAddressAndTimeRangeRIBS</code> instance.
     */
    static constructFromObject(data, obj) {
        return new ListConfirmedTransactionsByAddressAndTimeRangeRIBS(data);
    }

    /**
     * Gets the actual instance, which can be <code>ListConfirmedTransactionsByAddressAndTimeRangeRIBSB</code>, <code>ListConfirmedTransactionsByAddressAndTimeRangeRIBSBC</code>, <code>ListConfirmedTransactionsByAddressAndTimeRangeRIBSBSC</code>, <code>ListConfirmedTransactionsByAddressAndTimeRangeRIBSD</code>, <code>ListConfirmedTransactionsByAddressAndTimeRangeRIBSD2</code>, <code>ListConfirmedTransactionsByAddressAndTimeRangeRIBSE</code>, <code>ListConfirmedTransactionsByAddressAndTimeRangeRIBSEC</code>, <code>ListConfirmedTransactionsByAddressAndTimeRangeRIBSL</code>, <code>ListConfirmedTransactionsByAddressAndTimeRangeRIBSZ</code>.
     * @return {(module:model/ListConfirmedTransactionsByAddressAndTimeRangeRIBSB|module:model/ListConfirmedTransactionsByAddressAndTimeRangeRIBSBC|module:model/ListConfirmedTransactionsByAddressAndTimeRangeRIBSBSC|module:model/ListConfirmedTransactionsByAddressAndTimeRangeRIBSD|module:model/ListConfirmedTransactionsByAddressAndTimeRangeRIBSD2|module:model/ListConfirmedTransactionsByAddressAndTimeRangeRIBSE|module:model/ListConfirmedTransactionsByAddressAndTimeRangeRIBSEC|module:model/ListConfirmedTransactionsByAddressAndTimeRangeRIBSL|module:model/ListConfirmedTransactionsByAddressAndTimeRangeRIBSZ)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>ListConfirmedTransactionsByAddressAndTimeRangeRIBSB</code>, <code>ListConfirmedTransactionsByAddressAndTimeRangeRIBSBC</code>, <code>ListConfirmedTransactionsByAddressAndTimeRangeRIBSBSC</code>, <code>ListConfirmedTransactionsByAddressAndTimeRangeRIBSD</code>, <code>ListConfirmedTransactionsByAddressAndTimeRangeRIBSD2</code>, <code>ListConfirmedTransactionsByAddressAndTimeRangeRIBSE</code>, <code>ListConfirmedTransactionsByAddressAndTimeRangeRIBSEC</code>, <code>ListConfirmedTransactionsByAddressAndTimeRangeRIBSL</code>, <code>ListConfirmedTransactionsByAddressAndTimeRangeRIBSZ</code>.
     * @param {(module:model/ListConfirmedTransactionsByAddressAndTimeRangeRIBSB|module:model/ListConfirmedTransactionsByAddressAndTimeRangeRIBSBC|module:model/ListConfirmedTransactionsByAddressAndTimeRangeRIBSBSC|module:model/ListConfirmedTransactionsByAddressAndTimeRangeRIBSD|module:model/ListConfirmedTransactionsByAddressAndTimeRangeRIBSD2|module:model/ListConfirmedTransactionsByAddressAndTimeRangeRIBSE|module:model/ListConfirmedTransactionsByAddressAndTimeRangeRIBSEC|module:model/ListConfirmedTransactionsByAddressAndTimeRangeRIBSL|module:model/ListConfirmedTransactionsByAddressAndTimeRangeRIBSZ)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = ListConfirmedTransactionsByAddressAndTimeRangeRIBS.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of ListConfirmedTransactionsByAddressAndTimeRangeRIBS from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/ListConfirmedTransactionsByAddressAndTimeRangeRIBS} An instance of ListConfirmedTransactionsByAddressAndTimeRangeRIBS.
     */
    static fromJSON = function(json_string){
        return ListConfirmedTransactionsByAddressAndTimeRangeRIBS.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * Represents the locktime on the transaction on the specific blockchain, i.e. the blockheight at which the transaction is valid.
 * @member {Number} locktime
 */
ListConfirmedTransactionsByAddressAndTimeRangeRIBS.prototype['locktime'] = undefined;

/**
 * Represents the total size of this transaction.
 * @member {Number} size
 */
ListConfirmedTransactionsByAddressAndTimeRangeRIBS.prototype['size'] = undefined;

/**
 * Represents the virtual size of this transaction.
 * @member {Number} vSize
 */
ListConfirmedTransactionsByAddressAndTimeRangeRIBS.prototype['vSize'] = undefined;

/**
 * Defines the version of the transaction.
 * @member {Number} version
 */
ListConfirmedTransactionsByAddressAndTimeRangeRIBS.prototype['version'] = undefined;

/**
 * Object Array representation of transaction inputs
 * @member {Array.<module:model/ListConfirmedTransactionsByAddressRIBSZVinInner>} vin
 */
ListConfirmedTransactionsByAddressAndTimeRangeRIBS.prototype['vin'] = undefined;

/**
 * Object Array representation of transaction outputs
 * @member {Array.<module:model/GetTransactionDetailsByTransactionIDRIBSZVoutInner>} vout
 */
ListConfirmedTransactionsByAddressAndTimeRangeRIBS.prototype['vout'] = undefined;

/**
 * Represents the specific transaction contract.
 * @member {String} contract
 */
ListConfirmedTransactionsByAddressAndTimeRangeRIBS.prototype['contract'] = undefined;

/**
 * Represents the amount of gas used by this specific transaction alone.
 * @member {String} gasLimit
 */
ListConfirmedTransactionsByAddressAndTimeRangeRIBS.prototype['gasLimit'] = undefined;

/**
 * @member {module:model/ListConfirmedTransactionsByAddressRIBSBSCGasPrice} gasPrice
 */
ListConfirmedTransactionsByAddressAndTimeRangeRIBS.prototype['gasPrice'] = undefined;

/**
 * Represents the exact unit of gas that was used for the transaction.
 * @member {String} gasUsed
 */
ListConfirmedTransactionsByAddressAndTimeRangeRIBS.prototype['gasUsed'] = undefined;

/**
 * Represents additional information that is required for the transaction.
 * @member {String} inputData
 */
ListConfirmedTransactionsByAddressAndTimeRangeRIBS.prototype['inputData'] = undefined;

/**
 * Represents the sequential running number for an address, starting from 0 for the first transaction. E.g., if the nonce of a transaction is 10, it would be the 11th transaction sent from the sender's address.
 * @member {Number} nonce
 */
ListConfirmedTransactionsByAddressAndTimeRangeRIBS.prototype['nonce'] = undefined;

/**
 * String representation of the transaction status
 * @member {String} transactionStatus
 */
ListConfirmedTransactionsByAddressAndTimeRangeRIBS.prototype['transactionStatus'] = undefined;

/**
 * It is used to enforce balance of Spend and Output transfers, in order to prevent their replay across transactions.
 * @member {String} bindingSig
 */
ListConfirmedTransactionsByAddressAndTimeRangeRIBS.prototype['bindingSig'] = undefined;

/**
 * Represents a block height after which the transaction will expire.
 * @member {Number} expiryHeight
 */
ListConfirmedTransactionsByAddressAndTimeRangeRIBS.prototype['expiryHeight'] = undefined;

/**
 * Represents an encoding of a JoinSplitSig public validating key.
 * @member {String} joinSplitPubKey
 */
ListConfirmedTransactionsByAddressAndTimeRangeRIBS.prototype['joinSplitPubKey'] = undefined;

/**
 * Is used to sign transactions that contain at least one JoinSplit description.
 * @member {String} joinSplitSig
 */
ListConfirmedTransactionsByAddressAndTimeRangeRIBS.prototype['joinSplitSig'] = undefined;

/**
 * \"Overwinter\" is the network upgrade for the Zcash blockchain.
 * @member {Boolean} overwintered
 */
ListConfirmedTransactionsByAddressAndTimeRangeRIBS.prototype['overwintered'] = undefined;

/**
 * Represents a sequence of JoinSplit descriptions using BCTV14 proofs.
 * @member {Array.<module:model/ListConfirmedTransactionsByAddressRIBSZVJoinSplitInner>} vJoinSplit
 */
ListConfirmedTransactionsByAddressAndTimeRangeRIBS.prototype['vJoinSplit'] = undefined;

/**
 * Object Array representation of transaction output descriptions
 * @member {Array.<module:model/GetTransactionDetailsByTransactionIDRIBSZVShieldedOutputInner>} vShieldedOutput
 */
ListConfirmedTransactionsByAddressAndTimeRangeRIBS.prototype['vShieldedOutput'] = undefined;

/**
 * Object Array representation of transaction spend descriptions
 * @member {Array.<module:model/GetTransactionDetailsByTransactionIDRIBSZVShieldedSpendInner>} vShieldedSpend
 */
ListConfirmedTransactionsByAddressAndTimeRangeRIBS.prototype['vShieldedSpend'] = undefined;

/**
 * Defines the transaction value balance.
 * @member {String} valueBalance
 */
ListConfirmedTransactionsByAddressAndTimeRangeRIBS.prototype['valueBalance'] = undefined;

/**
 * Represents the transaction version group ID.
 * @member {String} versionGroupId
 */
ListConfirmedTransactionsByAddressAndTimeRangeRIBS.prototype['versionGroupId'] = undefined;


ListConfirmedTransactionsByAddressAndTimeRangeRIBS.OneOf = ["ListConfirmedTransactionsByAddressAndTimeRangeRIBSB", "ListConfirmedTransactionsByAddressAndTimeRangeRIBSBC", "ListConfirmedTransactionsByAddressAndTimeRangeRIBSBSC", "ListConfirmedTransactionsByAddressAndTimeRangeRIBSD", "ListConfirmedTransactionsByAddressAndTimeRangeRIBSD2", "ListConfirmedTransactionsByAddressAndTimeRangeRIBSE", "ListConfirmedTransactionsByAddressAndTimeRangeRIBSEC", "ListConfirmedTransactionsByAddressAndTimeRangeRIBSL", "ListConfirmedTransactionsByAddressAndTimeRangeRIBSZ"];

export default ListConfirmedTransactionsByAddressAndTimeRangeRIBS;

