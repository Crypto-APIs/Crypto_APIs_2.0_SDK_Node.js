/**
 * CryptoAPIs
 * Crypto APIs is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2021-03-20
 * Contact: developers@cryptoapis.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetTransactionDetailsByTransactionIDRIBSZVShieldedSpendInner from './GetTransactionDetailsByTransactionIDRIBSZVShieldedSpendInner';
import ListTransactionsByBlockHeightRIBSB from './ListTransactionsByBlockHeightRIBSB';
import ListTransactionsByBlockHeightRIBSBC from './ListTransactionsByBlockHeightRIBSBC';
import ListTransactionsByBlockHeightRIBSBSC from './ListTransactionsByBlockHeightRIBSBSC';
import ListTransactionsByBlockHeightRIBSBSCGasPrice from './ListTransactionsByBlockHeightRIBSBSCGasPrice';
import ListTransactionsByBlockHeightRIBSD from './ListTransactionsByBlockHeightRIBSD';
import ListTransactionsByBlockHeightRIBSD2 from './ListTransactionsByBlockHeightRIBSD2';
import ListTransactionsByBlockHeightRIBSE from './ListTransactionsByBlockHeightRIBSE';
import ListTransactionsByBlockHeightRIBSEC from './ListTransactionsByBlockHeightRIBSEC';
import ListTransactionsByBlockHeightRIBSL from './ListTransactionsByBlockHeightRIBSL';
import ListTransactionsByBlockHeightRIBSZ from './ListTransactionsByBlockHeightRIBSZ';
import ListTransactionsByBlockHeightRIBSZVJoinSplitInner from './ListTransactionsByBlockHeightRIBSZVJoinSplitInner';
import ListTransactionsByBlockHeightRIBSZVShieldedOutputInner from './ListTransactionsByBlockHeightRIBSZVShieldedOutputInner';
import ListTransactionsByBlockHeightRIBSZVinInner from './ListTransactionsByBlockHeightRIBSZVinInner';
import ListTransactionsByBlockHeightRIBSZVoutInner from './ListTransactionsByBlockHeightRIBSZVoutInner';

/**
 * The ListTransactionsByBlockHeightRIBS model module.
 * @module model/ListTransactionsByBlockHeightRIBS
 * @version 1.11.0
 */
class ListTransactionsByBlockHeightRIBS {
    /**
     * Constructs a new <code>ListTransactionsByBlockHeightRIBS</code>.
     * @alias module:model/ListTransactionsByBlockHeightRIBS
     * @param {(module:model/ListTransactionsByBlockHeightRIBSB|module:model/ListTransactionsByBlockHeightRIBSBC|module:model/ListTransactionsByBlockHeightRIBSBSC|module:model/ListTransactionsByBlockHeightRIBSD|module:model/ListTransactionsByBlockHeightRIBSD2|module:model/ListTransactionsByBlockHeightRIBSE|module:model/ListTransactionsByBlockHeightRIBSEC|module:model/ListTransactionsByBlockHeightRIBSL|module:model/ListTransactionsByBlockHeightRIBSZ)} instance The actual instance to initialize ListTransactionsByBlockHeightRIBS.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "ListTransactionsByBlockHeightRIBSB") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                ListTransactionsByBlockHeightRIBSB.validateJSON(instance); // throw an exception if no match
                // create ListTransactionsByBlockHeightRIBSB from JS object
                this.actualInstance = ListTransactionsByBlockHeightRIBSB.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into ListTransactionsByBlockHeightRIBSB
            errorMessages.push("Failed to construct ListTransactionsByBlockHeightRIBSB: " + err)
        }

        try {
            if (typeof instance === "ListTransactionsByBlockHeightRIBSE") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                ListTransactionsByBlockHeightRIBSE.validateJSON(instance); // throw an exception if no match
                // create ListTransactionsByBlockHeightRIBSE from JS object
                this.actualInstance = ListTransactionsByBlockHeightRIBSE.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into ListTransactionsByBlockHeightRIBSE
            errorMessages.push("Failed to construct ListTransactionsByBlockHeightRIBSE: " + err)
        }

        try {
            if (typeof instance === "ListTransactionsByBlockHeightRIBSD") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                ListTransactionsByBlockHeightRIBSD.validateJSON(instance); // throw an exception if no match
                // create ListTransactionsByBlockHeightRIBSD from JS object
                this.actualInstance = ListTransactionsByBlockHeightRIBSD.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into ListTransactionsByBlockHeightRIBSD
            errorMessages.push("Failed to construct ListTransactionsByBlockHeightRIBSD: " + err)
        }

        try {
            if (typeof instance === "ListTransactionsByBlockHeightRIBSD2") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                ListTransactionsByBlockHeightRIBSD2.validateJSON(instance); // throw an exception if no match
                // create ListTransactionsByBlockHeightRIBSD2 from JS object
                this.actualInstance = ListTransactionsByBlockHeightRIBSD2.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into ListTransactionsByBlockHeightRIBSD2
            errorMessages.push("Failed to construct ListTransactionsByBlockHeightRIBSD2: " + err)
        }

        try {
            if (typeof instance === "ListTransactionsByBlockHeightRIBSL") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                ListTransactionsByBlockHeightRIBSL.validateJSON(instance); // throw an exception if no match
                // create ListTransactionsByBlockHeightRIBSL from JS object
                this.actualInstance = ListTransactionsByBlockHeightRIBSL.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into ListTransactionsByBlockHeightRIBSL
            errorMessages.push("Failed to construct ListTransactionsByBlockHeightRIBSL: " + err)
        }

        try {
            if (typeof instance === "ListTransactionsByBlockHeightRIBSBC") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                ListTransactionsByBlockHeightRIBSBC.validateJSON(instance); // throw an exception if no match
                // create ListTransactionsByBlockHeightRIBSBC from JS object
                this.actualInstance = ListTransactionsByBlockHeightRIBSBC.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into ListTransactionsByBlockHeightRIBSBC
            errorMessages.push("Failed to construct ListTransactionsByBlockHeightRIBSBC: " + err)
        }

        try {
            if (typeof instance === "ListTransactionsByBlockHeightRIBSEC") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                ListTransactionsByBlockHeightRIBSEC.validateJSON(instance); // throw an exception if no match
                // create ListTransactionsByBlockHeightRIBSEC from JS object
                this.actualInstance = ListTransactionsByBlockHeightRIBSEC.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into ListTransactionsByBlockHeightRIBSEC
            errorMessages.push("Failed to construct ListTransactionsByBlockHeightRIBSEC: " + err)
        }

        try {
            if (typeof instance === "ListTransactionsByBlockHeightRIBSBSC") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                ListTransactionsByBlockHeightRIBSBSC.validateJSON(instance); // throw an exception if no match
                // create ListTransactionsByBlockHeightRIBSBSC from JS object
                this.actualInstance = ListTransactionsByBlockHeightRIBSBSC.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into ListTransactionsByBlockHeightRIBSBSC
            errorMessages.push("Failed to construct ListTransactionsByBlockHeightRIBSBSC: " + err)
        }

        try {
            if (typeof instance === "ListTransactionsByBlockHeightRIBSZ") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                ListTransactionsByBlockHeightRIBSZ.validateJSON(instance); // throw an exception if no match
                // create ListTransactionsByBlockHeightRIBSZ from JS object
                this.actualInstance = ListTransactionsByBlockHeightRIBSZ.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into ListTransactionsByBlockHeightRIBSZ
            errorMessages.push("Failed to construct ListTransactionsByBlockHeightRIBSZ: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `ListTransactionsByBlockHeightRIBS` with oneOf schemas ListTransactionsByBlockHeightRIBSB, ListTransactionsByBlockHeightRIBSBC, ListTransactionsByBlockHeightRIBSBSC, ListTransactionsByBlockHeightRIBSD, ListTransactionsByBlockHeightRIBSD2, ListTransactionsByBlockHeightRIBSE, ListTransactionsByBlockHeightRIBSEC, ListTransactionsByBlockHeightRIBSL, ListTransactionsByBlockHeightRIBSZ. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `ListTransactionsByBlockHeightRIBS` with oneOf schemas ListTransactionsByBlockHeightRIBSB, ListTransactionsByBlockHeightRIBSBC, ListTransactionsByBlockHeightRIBSBSC, ListTransactionsByBlockHeightRIBSD, ListTransactionsByBlockHeightRIBSD2, ListTransactionsByBlockHeightRIBSE, ListTransactionsByBlockHeightRIBSEC, ListTransactionsByBlockHeightRIBSL, ListTransactionsByBlockHeightRIBSZ. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>ListTransactionsByBlockHeightRIBS</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListTransactionsByBlockHeightRIBS} obj Optional instance to populate.
     * @return {module:model/ListTransactionsByBlockHeightRIBS} The populated <code>ListTransactionsByBlockHeightRIBS</code> instance.
     */
    static constructFromObject(data, obj) {
        return new ListTransactionsByBlockHeightRIBS(data);
    }

    /**
     * Gets the actual instance, which can be <code>ListTransactionsByBlockHeightRIBSB</code>, <code>ListTransactionsByBlockHeightRIBSBC</code>, <code>ListTransactionsByBlockHeightRIBSBSC</code>, <code>ListTransactionsByBlockHeightRIBSD</code>, <code>ListTransactionsByBlockHeightRIBSD2</code>, <code>ListTransactionsByBlockHeightRIBSE</code>, <code>ListTransactionsByBlockHeightRIBSEC</code>, <code>ListTransactionsByBlockHeightRIBSL</code>, <code>ListTransactionsByBlockHeightRIBSZ</code>.
     * @return {(module:model/ListTransactionsByBlockHeightRIBSB|module:model/ListTransactionsByBlockHeightRIBSBC|module:model/ListTransactionsByBlockHeightRIBSBSC|module:model/ListTransactionsByBlockHeightRIBSD|module:model/ListTransactionsByBlockHeightRIBSD2|module:model/ListTransactionsByBlockHeightRIBSE|module:model/ListTransactionsByBlockHeightRIBSEC|module:model/ListTransactionsByBlockHeightRIBSL|module:model/ListTransactionsByBlockHeightRIBSZ)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>ListTransactionsByBlockHeightRIBSB</code>, <code>ListTransactionsByBlockHeightRIBSBC</code>, <code>ListTransactionsByBlockHeightRIBSBSC</code>, <code>ListTransactionsByBlockHeightRIBSD</code>, <code>ListTransactionsByBlockHeightRIBSD2</code>, <code>ListTransactionsByBlockHeightRIBSE</code>, <code>ListTransactionsByBlockHeightRIBSEC</code>, <code>ListTransactionsByBlockHeightRIBSL</code>, <code>ListTransactionsByBlockHeightRIBSZ</code>.
     * @param {(module:model/ListTransactionsByBlockHeightRIBSB|module:model/ListTransactionsByBlockHeightRIBSBC|module:model/ListTransactionsByBlockHeightRIBSBSC|module:model/ListTransactionsByBlockHeightRIBSD|module:model/ListTransactionsByBlockHeightRIBSD2|module:model/ListTransactionsByBlockHeightRIBSE|module:model/ListTransactionsByBlockHeightRIBSEC|module:model/ListTransactionsByBlockHeightRIBSL|module:model/ListTransactionsByBlockHeightRIBSZ)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = ListTransactionsByBlockHeightRIBS.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of ListTransactionsByBlockHeightRIBS from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/ListTransactionsByBlockHeightRIBS} An instance of ListTransactionsByBlockHeightRIBS.
     */
    static fromJSON = function(json_string){
        return ListTransactionsByBlockHeightRIBS.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * Represents the time at which a particular transaction can be added to the blockchain.
 * @member {Number} locktime
 */
ListTransactionsByBlockHeightRIBS.prototype['locktime'] = undefined;

/**
 * Represents the total size of this transaction.
 * @member {Number} size
 */
ListTransactionsByBlockHeightRIBS.prototype['size'] = undefined;

/**
 * Represents the virtual size of this transaction.
 * @member {Number} vSize
 */
ListTransactionsByBlockHeightRIBS.prototype['vSize'] = undefined;

/**
 * Represents the transaction version number.
 * @member {Number} version
 */
ListTransactionsByBlockHeightRIBS.prototype['version'] = undefined;

/**
 * Object Array representation of transaction inputs
 * @member {Array.<module:model/ListTransactionsByBlockHeightRIBSZVinInner>} vin
 */
ListTransactionsByBlockHeightRIBS.prototype['vin'] = undefined;

/**
 * Object Array representation of transaction outputs
 * @member {Array.<module:model/ListTransactionsByBlockHeightRIBSZVoutInner>} vout
 */
ListTransactionsByBlockHeightRIBS.prototype['vout'] = undefined;

/**
 * Represents the specific transaction contract.
 * @member {String} contract
 */
ListTransactionsByBlockHeightRIBS.prototype['contract'] = undefined;

/**
 * Represents the amount of gas used by this specific transaction alone.
 * @member {String} gasLimit
 */
ListTransactionsByBlockHeightRIBS.prototype['gasLimit'] = undefined;

/**
 * @member {module:model/ListTransactionsByBlockHeightRIBSBSCGasPrice} gasPrice
 */
ListTransactionsByBlockHeightRIBS.prototype['gasPrice'] = undefined;

/**
 * Represents the exact unit of gas that was used for the transaction.
 * @member {String} gasUsed
 */
ListTransactionsByBlockHeightRIBS.prototype['gasUsed'] = undefined;

/**
 * Represents additional information that is required for the transaction.
 * @member {String} inputData
 */
ListTransactionsByBlockHeightRIBS.prototype['inputData'] = undefined;

/**
 * Represents the sequential running number for an address, starting from 0 for the first transaction. E.g., if the nonce of a transaction is 10, it would be the 11th transaction sent from the sender's address.
 * @member {Number} nonce
 */
ListTransactionsByBlockHeightRIBS.prototype['nonce'] = undefined;

/**
 * Represents the status of this transaction
 * @member {String} transactionStatus
 */
ListTransactionsByBlockHeightRIBS.prototype['transactionStatus'] = undefined;

/**
 * It is used to enforce balance of Spend and Output transfers, in order to prevent their replay across transactions.
 * @member {String} bindingSig
 */
ListTransactionsByBlockHeightRIBS.prototype['bindingSig'] = undefined;

/**
 * Represents a block height after which the transaction will expire.
 * @member {Number} expiryHeight
 */
ListTransactionsByBlockHeightRIBS.prototype['expiryHeight'] = undefined;

/**
 * Represents an encoding of a JoinSplitSig public validating key.
 * @member {String} joinSplitPubKey
 */
ListTransactionsByBlockHeightRIBS.prototype['joinSplitPubKey'] = undefined;

/**
 * Is used to sign transactions that contain at least one JoinSplit description.
 * @member {String} joinSplitSig
 */
ListTransactionsByBlockHeightRIBS.prototype['joinSplitSig'] = undefined;

/**
 * \"Overwinter\" is the network upgrade for the Zcash blockchain.
 * @member {Boolean} overwintered
 */
ListTransactionsByBlockHeightRIBS.prototype['overwintered'] = undefined;

/**
 * Represents a sequence of JoinSplit descriptions using BCTV14 proofs.
 * @member {Array.<module:model/ListTransactionsByBlockHeightRIBSZVJoinSplitInner>} vJoinSplit
 */
ListTransactionsByBlockHeightRIBS.prototype['vJoinSplit'] = undefined;

/**
 * Object Array representation of transaction output descriptions
 * @member {Array.<module:model/ListTransactionsByBlockHeightRIBSZVShieldedOutputInner>} vShieldedOutput
 */
ListTransactionsByBlockHeightRIBS.prototype['vShieldedOutput'] = undefined;

/**
 * Object Array representation of transaction spend descriptions
 * @member {Array.<module:model/GetTransactionDetailsByTransactionIDRIBSZVShieldedSpendInner>} vShieldedSpend
 */
ListTransactionsByBlockHeightRIBS.prototype['vShieldedSpend'] = undefined;

/**
 * Defines the transaction value balance.
 * @member {String} valueBalance
 */
ListTransactionsByBlockHeightRIBS.prototype['valueBalance'] = undefined;

/**
 * Represents the transaction version group ID.
 * @member {String} versionGroupId
 */
ListTransactionsByBlockHeightRIBS.prototype['versionGroupId'] = undefined;


ListTransactionsByBlockHeightRIBS.OneOf = ["ListTransactionsByBlockHeightRIBSB", "ListTransactionsByBlockHeightRIBSBC", "ListTransactionsByBlockHeightRIBSBSC", "ListTransactionsByBlockHeightRIBSD", "ListTransactionsByBlockHeightRIBSD2", "ListTransactionsByBlockHeightRIBSE", "ListTransactionsByBlockHeightRIBSEC", "ListTransactionsByBlockHeightRIBSL", "ListTransactionsByBlockHeightRIBSZ"];

export default ListTransactionsByBlockHeightRIBS;

