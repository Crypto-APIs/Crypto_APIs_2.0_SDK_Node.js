/**
 * CryptoAPIs
 * Crypto APIs is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2021-03-20
 * Contact: developers@cryptoapis.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityRIST from './CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityRIST';

/**
 * The CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityRIS model module.
 * @module model/CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityRIS
 * @version 1.11.0
 */
class CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityRIS {
    /**
     * Constructs a new <code>CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityRIS</code>.
     * Represents the specific token data which depends on its type - if it is a Coin or Token.
     * @alias module:model/CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityRIS
     * @param {(module:model/CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityRIST)} instance The actual instance to initialize CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityRIS.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityRIST") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityRIST.validateJSON(instance); // throw an exception if no match
                // create CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityRIST from JS object
                this.actualInstance = CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityRIST.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityRIST
            errorMessages.push("Failed to construct CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityRIST: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityRIS` with oneOf schemas CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityRIST. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityRIS` with oneOf schemas CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityRIST. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityRIS</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityRIS} obj Optional instance to populate.
     * @return {module:model/CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityRIS} The populated <code>CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityRIS</code> instance.
     */
    static constructFromObject(data, obj) {
        return new CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityRIS(data);
    }

    /**
     * Gets the actual instance, which can be <code>CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityRIST</code>.
     * @return {(module:model/CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityRIST)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityRIST</code>.
     * @param {(module:model/CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityRIST)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityRIS.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityRIS from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityRIS} An instance of CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityRIS.
     */
    static fromJSON = function(json_string){
        return CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityRIS.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * Defines the contract address in the blockchain for an ERC20 token.
 * @member {String} contractAddress
 */
CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityRIS.prototype['contractAddress'] = undefined;

/**
 * Defines the fee limit value.
 * @member {String} feeLimit
 */
CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityRIS.prototype['feeLimit'] = undefined;

/**
 * Defines the Token symbol.
 * @member {String} symbol
 */
CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityRIS.prototype['symbol'] = undefined;


CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityRIS.OneOf = ["CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityRIST"];

export default CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityRIS;

